#!/bin/sh

PREREQ=""

prereqs()
{
	echo "$PREREQ"
}

case $1 in
# get pre-requisites
prereqs)
	prereqs
	exit 0
	;;
esac

# this code taken from open-iscsi local-top script
parse_iscsi_ops ()
{
	. /etc/iscsi.initramfs

	for x in $(cat /proc/cmdline); do
		case ${x} in
		iscsi_auto)
			ISCSI_AUTO=true
			;;
        	iscsi_initiator=*)
                	ISCSI_INITIATOR="${x#iscsi_initiator=}"
                	;;
        	iscsi_target_name=*)
                	ISCSI_TARGET_NAME="${x#iscsi_target_name=}"
                	;;
        	iscsi_target_ip=*)
                	ISCSI_TARGET_IP="${x#iscsi_target_ip=}"
                	;;
        	iscsi_target_port=*)
                	ISCSI_TARGET_PORT="${x#iscsi_target_port=}"
                	;;
		iscsi_target_group=*)
			ISCSI_TARGET_GROUP="${x#iscsi_target_group=}"
			;;
		iscsi_username=*)
			ISCSI_USERNAME="${x#iscsi_username=}"
			;;
		iscsi_password=*)
			ISCSI_PASSWORD="${x#iscsi_password=}"
			;;
		iscsi_in_username=*)
			ISCSI_IN_USERNAME="${x#iscsi_in_username=}"
			;;
		iscsi_in_password=*)
			ISCSI_IN_PASSWORD="${x#iscsi_in_password=}"
			;;
		esac
	done
}
# end open-iscsi local-top

if [ ! -x /sbin/iscsid ]; then
 log_failure_msg "Missing iscsid, exiting"
 exit 0
fi

if [ ! -x /sbin/iscsiadm ]; then
 log_failure_msg "Missing iscsiadm, exiting"
 exit 0
fi

parse_iscsi_ops
if ( [ -z $ISCSI_TARGET_NAME ] || [ -z $ISCSI_TARGET_IP ] ) && [ -z $ISCSI_AUTO ]; then
	exit 0
fi

. /conf/initramfs.conf
for conf in conf/conf.d/*; do
 [ -f ${conf} ] && . ${conf}
done
. /scripts/functions

configure_networking

modprobe iscsi_tcp
modprobe crc32c
modprobe ib_iser

mkdir -p /run/lock

/sbin/iscsid --no-pid-file

/sbin/iscsiadm -m discovery -t sendtargets -p $ISCSI_TARGET_IP
if [[ $(ibstat -l) ]]; then
 /sbin/iscsiadm -m node -T $ISCSI_TARGET_NAME -o update -n iface.transport_name -v iser
else
 log_warning_msg "No RDMA-capable interfaces detected. Using TCP."
fi

if [ ! -z $ISCSI_USERNAME ]; then
 /sbin/iscsiadm -m node -T $ISCSI_TARGET_NAME -o update -n node.session.auth.username -v "$ISCSI_USERNAME"
 /sbin/iscsiadm -m node -T $ISCSI_TARGET_NAME -o update -n node.session.auth.password -v "$ISCSI_PASSWORD"
fi

if [ ! -z $ISCSI_IN_USERNAME ]; then
 /sbin/iscsiadm -m node -T $ISCSI_TARGET_NAME -o update -n node.session.auth.username_in -v "$ISCSI_IN_USERNAME"
 /sbin/iscsiadm -m node -T $ISCSI_TARGET_NAME -o update -n node.session.auth.password_in -v "$ISCSI_IN_PASSWORD"
fi

/sbin/iscsiadm -m node -T $ISCSI_TARGET_NAME --login

#/bin/killall iscsid

udevadm settle

exit 0
